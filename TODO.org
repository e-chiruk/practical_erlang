
* Добавить темы:

- cowboy, http service
  роутинг, хендлер

- работа с БД (postgresql, mysql)
  драйвер, пул, реконнекты

- курсовой проект на выходе:
  http-сервис, БД, git
  куда-то надо деплоить
  соединиться с фронтендом

* erlang + windows -- проверить все упражнения

* 08. concurrency

картинка-схема, как работает почтовый ящик
(нарисую на доске, сфоткаю, нарисую нормально)

добавить про exit(Pid, shutdown)

Подготовить к практике MapReduce. Схема как можно наладить общение между потоками.
Должна быть в README.


* 09. gen_server_1
- схема из 4х квадратов, как в gen_server_2 только для нашей кастомной реализации


* 10. gen_server_2
схема deadlock
прямой и через цепочку вызовов


* 12. supervisor
simple_one_for_one, можно ли остановить/удалить child?

убрать старые версии init, оставить только новые, на мапах


* 13. Application
- показывать observer. На примере solution или на каком-нибудь другом примере.


* 14. OTP
- структуру проекта на примере rebar3 а не rebar2
- показать wgnet либы
- cowboy, cowlib, ranch -- пример OTP приложений
- схема -- проблема с транзитивными либами


* 15. обработка ошибок
- рассказать про pipeline
- показать, как это выглядит на OCaml (Haskell)
https://github.com/yzh44yzh/erl_fun_composition
